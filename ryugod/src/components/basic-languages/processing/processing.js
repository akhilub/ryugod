/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
export var conf = {
    comments: {
        lineComment: ['//'],
        blockComment: ["/*", "*/"]
    },
    brackets: [
        ['{', '}'],
        ['[', ']'],
        ['(', ')']
    ],
    autoClosingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"', notIn: ['string'] },
        //{ open: "'", close: "'", notIn: ['string', 'comment'] }
    ],
    surroundingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"' },
        //{ open: "'", close: "'" }
    ],
};
export var language = {
    defaultToken: '',
    tokenPostfix: '.pde',
    keywords: [
        'catch',
        'class',
        'extends',
        'false',
        'final',
        'implements',
        'import',
        'new',
        'null',
        'private',
        'public',
        'return',
        'static',
        'super',
        'this',
        'true',
        'try',
        'void',
        'boolean',
        'byte',
        'char',
        'color',
        'double',
        'float',
        'int',
        'long',
        'for',
        'while',
        'break',
        'case',
        'continue',
        'default',
        'else',
        'if',
        'switch',
    ],
    builtins: [        
        'draw',
        'exit',
        'loop',
        'noLoop',
        'pop',
        'popStyle',
        'push',
        'pushStyle',
        'redraw',
        'setLocation',
        'setResizable',
        'setTitle',
        'setup',
        'thread',
        'cursor',
        'delay',
        'displayDensity',
        'focused',
        'frameCount',
        'frameRate',
        'frameRate',
        'fullScreen',
        'height',
        'noCursor',
        'noSmooth',
        'pixelDensity',
        'pixelHeight',
        'pixelWidth',
        'settings',
        'size',
        'smooth',
        'width',
        'Array',
        'ArrayList',
        'FloatDict',
        'FloatList',
        'HashMap',
        'IntDict',
        'IntList',
        'JSONArray',
        'JSONObject',
        'Object',
        'String',
        'StringDict',
        'StringList',
        'Table',
        'TableRow',
        'XML',
        'binary',
        'boolean',
        'byte',
        'char',
        'float',
        'hex',
        'int',
        'str',
        'unbinary',
        'unhex',
        'join',
        'match',
        'matchAll',
        'nf',
        'nfc',
        'nfp',
        'nfs',
        'split',
        'splitTokens',
        'trim',
        'append',
        'arrayCopy',
        'concat',
        'expand',
        'reverse',
        'shorten',
        'sort',
        'splice',
        'subset',
        'createShape',
        'loadShape',
        'PShape',
        'arc',
        'circle',
        'ellipse',
        'line',
        'point',
        'quad',
        'rect',
        'square',
        'triangle',
        'bezier',
        'bezierDetail',
        'bezierPoint',
        'bezierTangent',
        'curve',
        'curveDetail',
        'curvePoint',
        'curveTangent',
        'curveTightness',
        'box',
        'sphere',
        'sphereDetail',
        'ellipseMode',
        'rectMode',
        'strokeCap',
        'strokeJoin',
        'strokeWeight',
        'beginContour',
        'beginShape',
        'bezierVertex',
        'curveVertex',
        'endContour',
        'endShape',
        'quadraticVertex',
        'vertex',
        'shape',
        'shapeMode',
        'mouseButton',
        'mouseClicked',
        'mouseDragged',
        'mouseMoved',
        'mousePressed',
        'mousePressed',
        'mouseReleased',
        'mouseWheel',
        'mouseX',
        'mouseY',
        'pmouseX',
        'pmouseY',
        'key',
        'keyCode',
        'keyPressed',
        'keyPressed',
        'keyReleased',
        'keyTyped',
        'BufferedReader',
        'createInput',
        'createReader',
        'launch',
        'loadBytes',
        'loadJSONArray',
        'loadJSONObject',
        'loadStrings',
        'loadTable',
        'loadXML',
        'parseJSONArray',
        'parseJSONObject',
        'parseXML',
        'selectFolder',
        'selectInput',
        'day',
        'hour',
        'millis',
        'minute',
        'month',
        'second',
        'year',
        'print',
        'printArray',
        'println',
        'save',
        'saveFrame',
        'beginRaw',
        'beginRecord',
        'createOutput',
        'createWriter',
        'endRaw',
        'endRecord',
        'PrintWriter',
        'saveBytes',
        'saveJSONArray',
        'saveJSONObject',
        'saveStream',
        'saveStrings',
        'saveTable',
        'saveXML',
        'selectOutput',
        'applyMatrix',
        'popMatrix',
        'printMatrix',
        'pushMatrix',
        'resetMatrix',
        'rotate',
        'rotateX',
        'rotateY',
        'rotateZ',
        'scale',
        'shearX',
        'shearY',
        'translate',
        'ambientLight',
        'directionalLight',
        'lightFalloff',
        'lights',
        'lightSpecular',
        'noLights',
        'normal',
        'pointLight',
        'spotLight',
        'beginCamera',
        'camera',
        'endCamera',
        'frustum',
        'ortho',
        'perspective',
        'printCamera',
        'printProjection',
        'modelX',
        'modelY',
        'modelZ',
        'screenX',
        'screenY',
        'screenZ',
        'ambient',
        'emissive',
        'shininess',
        'specular',
        'background',
        'clear',
        'colorMode',
        'fill',
        'noFill',
        'noStroke',
        'stroke',
        'alpha',
        'blue',
        'brightness',
        'color',
        'green',
        'hue',
        'lerpColor',
        'red',
        'saturation',
        'createImage',
        'PImage',
        'image',
        'imageMode',
        'loadImage',
        'noTint',
        'requestImage',
        'tint',
        'texture',
        'textureMode',
        'textureWrap',
        'blend',
        'copy',
        'filter',
        'get',
        'loadPixels',
        'pixels',
        'set',
        'updatePixels',
        'blendMode',
        'clip',
        'createGraphics',
        'hint',
        'noClip',
        'PGraphics',
        'loadShader',
        'PShader',
        'resetShader',
        'shader',
        'PFont',
        'createFont',
        'loadFont',
        'text',
        'textFont',
        'textAlign',
        'textLeading',
        'textMode',
        'textSize',
        'textWidth',
        'textAscent',
        'textDescent',
        'PVector',
        'abs',
        'ceil',
        'constrain',
        'dist',
        'exp',
        'floor',
        'lerp',
        'log',
        'mag',
        'map',
        'max',
        'min',
        'norm',
        'pow',
        'round',
        'sq',
        'sqrt',
        'acos',
        'asin',
        'atan',
        'atan2',
        'cos',
        'degrees',
        'radians',
        'sin',
        'tan',
        'noise',
        'noiseDetail',
        'noiseSeed',
        'random',
        'randomGaussian',
        'randomSeed',
        'HALF_PI',
        'PI',
        'QUARTER_PI',
        'TAU',
        'TWO_PI',
    ],
    brackets: [
        { open: '{', close: '}', token: 'delimiter.curly' },
        { open: '[', close: ']', token: 'delimiter.bracket' },
        { open: '(', close: ')', token: 'delimiter.parenthesis' }
    ],
    tokenizer: {
        root: [
            { include: '@whitespace' },
            { include: '@numbers' },
            { include: '@strings' },
            [/[,:;]/, 'delimiter'],
            [/[{}\[\]()]/, '@brackets'],
            [/@(\s+)?[a-zA-Z_]\w*/, 'metatag'],
            [
                /[a-zA-Z_]\w*/,
                {
                    cases: {
                        '@builtins': 'type.identifier',
                        '@keywords': 'keyword',
                        '@default': 'identifier',
                    }
                }
            ]
        ],
        // Deal with white space, including single and multi-line comments
        whitespace: [
            [/\s+/, 'white'],
            [/(^\/\/.*$)/, 'comment'],
            //[/(^#.*$)/, 'comment'],
            [/\/\*/, 'comment', '@comment'],
        ],
        comment: [
            [/[^\/*]+/, 'comment'],
            [/\*\//, 'comment', '@pop'],
            [/[\/*]/, 'comment']
        ],
        // Recognize hex, negatives, decimals, imaginaries, longs, and scientific notation
        numbers: [
            [/-?0x([abcdef]|[ABCDEF]|\d)+[lL]?/, 'number.hex'],
            [/-?(\d*\.)?\d+([eE][+\-]?\d+)?[jJ]?[lL]?/, 'number']
        ],
        // Recognize strings, including those broken across lines with \ (but not without)
        strings: [
            [/'$/, 'string.escape', '@popall'],
            [/'/, 'string.escape', '@stringBody'],
            [/"$/, 'string.escape', '@popall'],
            [/"/, 'string.escape', '@dblStringBody']
        ],
        stringBody: [
            [/[^\\']+$/, 'string', '@popall'],
            [/[^\\']+/, 'string'],
            [/\\./, 'string'],
            [/'/, 'string.escape', '@popall'],
            [/\\$/, 'string']
        ],
        dblStringBody: [
            [/[^\\"]+$/, 'string', '@popall'],
            [/[^\\"]+/, 'string'],
            [/\\./, 'string'],
            [/"/, 'string.escape', '@popall'],
            [/\\$/, 'string']
        ]
    }
};
