/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
export var conf = {
    comments: {
        lineComment: ';',
        blockComment: ["comment {", "}"]
    },
    brackets: [
        ['{', '}'],
        ['[', ']'],
        ['(', ')']
    ],
    autoClosingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"', notIn: ['string'] },
        { open: "'", close: "'", notIn: ['string', 'comment'] }
    ],
    surroundingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"' },
        { open: "'", close: "'" }
    ],
    folding: {
        offSide: true,
        markers: {
            start: new RegExp('^\\s*#region\\b'),
            end: new RegExp('^\\s*#endregion\\b')
        }
    }
};
export var language = {
    defaultToken: '',
    tokenPostfix: '.red',
    keywords: [
        'about',
        'abs',
        'absolute',
        'action',
        'action?',
        'add',
        'ajoin',
        'all',
        'also',
        'alter',
        'any',
        'any-block?',
        'any-function?',
        'any-object?',
        'any-path?',
        'any-string?',
        'any-word?',
        'append',
        'apply',
        'aqua',
        'arccosine',
        'arcsine',
        'arctangent',
        'array',
        'as-pair',
        'ascii?',
        'ask',
        'assert',
        'at',
        'attempt',
        'back',
        'backslash',
        'backspace',
        'base-color',
        'beige',
        'binary?',
        'bind',
        'bind?',
        'bitset?',
        'black',
        'block?',
        'blue',
        'body-of',
        'boot-print',
        'bound?',
        'break',
        'brick',
        'brown',
        'browse',
        'bs',
        'bugs',
        'call',
        'case',
        'catch',
        'cause-error',
        'cd',
        'change',
        'change-dir',
        'changes',
        'char?',
        'charset',
        'chat',
        'check',
        'checksum',
        'clean-path',
        'clear',
        'clos',
        'close',
        'closure',
        'closure?',
        'coal',
        'coffee',
        'collect',
        'collect-words',
        'command?',
        'comment',
        'complement',
        'compose',
        'compress',
        'confirm',
        'construct',
        'context',
        'continue',
        'copy',
        'cosine',
        'cr',
        'create',
        'crimson',
        'crlf',
        'cyan',
        'datatype?',
        'datatypes',
        'date?',
        'debase',
        'decimal?',
        'decloak',
        'decode',
        'decode-url',
        'decompress',
        'default',
        'dehex',
        'delect',
        'delete',
        'delete-dir',
        'deline',
        'delta-profile',
        'delta-time',
        'demo',
        'detab',
        'difference',
        'dir?',
        'dirize',
        'divide',
        'do',
        'do-callback',
        'do-codec',
        'do-commands',
        'docs',
        'does',
        'dp',
        'ds',
        'dt',
        'dump',
        'dump-obj',
        'echo',
        'eighth',
        'either',
        'email?',
        'empty?',
        'enbase',
        'encloak',
        'encode',
        'encoding?',
        'enline',
        'entab',
        'equal?',
        'equiv?',
        'error?',
        'escape',
        'even?',
        'event?',
        'evoke',
        'exclude',
        'exists?',
        'exit',
        'exp',
        'extend',
        'extract',
        'fifth',
        'file-type?',
        'file?',
        'find',
        'find-all',
        'find-script',
        'first',
        'first+',
        'for',
        'forall',
        'foreach',
        'forest',
        'forever',
        'form',
        'format',
        'forskip',
        'found?',
        'fourth',
        'frame?',
        'func',
        'funco',
        'funct',
        'function',
        'function?',
        'get',
        'get-env',
        'get-path?',
        'get-word?',
        'gob?',
        'gold',
        'gray',
        'greater-or-equal?',
        'greater?',
        'green',
        'halt',
        'handle?',
        'has',
        'head',
        'head?',
        'help',
        'if',
        'image?',
        'import',
        'in',
        'in-dir',
        'index?',
        'info?',
        'input',
        'insert',
        'integer?',
        'intern',
        'intersect',
        'invalid-utf?',
        'issue?',
        'ivory',
        'join',
        'khaki',
        'last',
        'last?',
        'latin1?',
        'launch',
        'leaf',
        'length?',
        'lesser-or-equal?',
        'lesser?',
        'lf',
        'lib',
        'library?',
        'license',
        'limit-usage',
        'linen',
        'list-dir',
        'list-env',
        'lit-path?',
        'lit-word?',
        'load',
        'load-extension',
        'load-gui',
        'log-10',
        'log-2',
        'log-e',
        'logic?',
        'loop',
        'loud-print',
        'lowercase',
        'ls',
        'magenta',
        'make',
        'make-banner',
        'make-dir',
        'map',
        'map-each',
        'map-event',
        'map-gob-offset',
        'map?',
        'maroon',
        'max',
        'maximum',
        'maximum-of',
        'min',
        'minimum',
        'minimum-of',
        'mint',
        'mkdir',
        'mod',
        'modified?',
        'modify',
        'module',
        'module?',
        'modulo',
        'mold',
        'mold64',
        'money?',
        'more',
        'move',
        'multiply',
        'native',
        'native?',
        'navy',
        'negate',
        'negative?',
        'new-line',
        'new-line?',
        'newline',
        'newpage',
        'next',
        'ninth',
        'none',
        'none?',
        'not',
        'not-equal?',
        'not-equiv?',
        'now',
        'null',
        'number?',
        'object',
        'object?',
        'odd?',
        'offset?',
        'oldrab',
        'olive',
        'op?',
        'open',
        'open?',
        'orange',
        'pair?',
        'papaya',
        'paren?',
        'parse',
        'past?',
        'path?',
        'pending',
        'percent?',
        'pewter',
        'pi',
        'pick',
        'pink',
        'poke',
        'port?',
        'positive?',
        'power',
        'prin',
        'print',
        'printf',
        'probe',
        'protect',
        'purple',
        'pwd',
        'q',
        'query',
        'quit',
        'quote',
        'random',
        'read',
        'redcode?',
        'redlue',
        'red.com',
        'redor',
        'recycle',
        'red',
        'reduce',
        'refinement?',
        'reflect',
        'reform',
        'rejoin',
        'remainder',
        'remold',
        'remove',
        'remove-each',
        'rename',
        'repeat',
        'repend',
        'replace',
        'request-file',
        'resolve',
        'return',
        'reverse',
        'reword',
        'rm',
        'round',
        'same?',
        'save',
        'say-browser',
        'scalar?',
        'script?',
        'second',
        'secure',
        'select',
        'selfless?',
        'series?',
        'set',
        'set-env',
        'set-path?',
        'set-scheme',
        'set-word?',
        'seventh',
        'shift',
        'sienna',
        'sign?',
        'silver',
        'sine',
        'single?',
        'sixth',
        'size?',
        'skip',
        'sky',
        'slash',
        'snow',
        'sort',
        'source',
        'sp',
        'space',
        'spec-of',
        'speed?',
        'split',
        'split-path',
        'square-root',
        'stack',
        'stats',
        'strict-equal?',
        'strict-not-equal?',
        'string?',
        'struct?',
        'subtract',
        'suffix?',
        'swap',
        'switch',
        'sys',
        'system',
        't',
        'tab',
        'tag?',
        'tail',
        'tail?',
        'take',
        'tan',
        'tangent',
        'task',
        'task?',
        'teal',
        'tenth',
        'third',
        'throw',
        'time?',
        'title-of',
        'to',
        'to-binary',
        'to-bitset',
        'to-block',
        'to-char',
        'to-closure',
        'to-command',
        'to-datatype',
        'to-date',
        'to-decimal',
        'to-email',
        'to-error',
        'to-event',
        'to-file',
        'to-function',
        'to-get-path',
        'to-get-word',
        'to-gob',
        'to-hex',
        'to-image',
        'to-integer',
        'to-issue',
        'to-lit-path',
        'to-lit-word',
        'to-local-file',
        'to-logic',
        'to-map',
        'to-module',
        'to-money',
        'to-object',
        'to-pair',
        'to-paren',
        'to-path',
        'to-percent',
        'to-port',
        'to-red-file',
        'to-refinement',
        'to-relative-file',
        'to-set-path',
        'to-set-word',
        'to-string',
        'to-tag',
        'to-time',
        'to-tuple',
        'to-typeset',
        'to-url',
        'to-vector',
        'to-word',
        'trace',
        'transcode',
        'trim',
        'true?',
        'try',
        'tuple?',
        'type?',
        'types-of',
        'typeset?',
        'unbind',
        'undirize',
        'union',
        'unique',
        'unless',
        'unprotect',
        'unset',
        'unset?',
        'until',
        'update',
        'upgrade',
        'uppercase',
        'url?',
        'usage',
        'use',
        'utf?',
        'utype?',
        'value?',
        'values-of',
        'vector?',
        'violet',
        'wait',
        'wake-up',
        'water',
        'what',
        'what-dir',
        'wheat',
        'while',
        'white',
        'why?',
        'word?',
        'words-of',
        'write',
        'yello',
        'yellow',
        'zero',
        'zero?',
    ],
    builtins: [
        'Red',
        'Title',
        'Original-Author',
        'Purpose',
        'Author',
        'Needs',
        'Date',
        'false',
        'off',
        'on',
        'no',
        'none',
        'red',
        'self',
        'true',
        'yes',
        'and',
        'or',
        'xor',
        'or~',
        'and~',
        'xor~',
    ],
    brackets: [
        { open: '{', close: '}', token: 'delimiter.curly' },
        { open: '[', close: ']', token: 'delimiter.bracket' },
        { open: '(', close: ')', token: 'delimiter.parenthesis' }
    ],
    tokenizer: {
        root: [
            { include: '@whitespace' },
            { include: '@numbers' },
            { include: '@strings' },
            [/[,:;]/, 'delimiter'],
            [/[{}\[\]()]/, '@brackets'],
            [
                /[a-zA-Z_][\w-~]*\??/,
                {
                    cases: {
                        '@keywords': 'keyword',
                        '@builtins': 'type.identifier',
                        '@default': 'identifier'
                    }
                }
            ]
        ],
        // Deal with white space, including single and multi-line comments
        whitespace: [
            [/\s+/, 'white'],
            [/(;.*$)/, 'comment'],
            [/OBTW/, 'comment', '@comment'],
        ],
        comment: [
            [/[^OBTW]+/, 'comment'],
            [/TLDR/, 'comment', '@pop'],
            [/[OBTW]/, 'comment']
        ],
        // Recognize hex, negatives, decimals, imaginaries, longs, and scientific notation
        numbers: [
            [/-?0x([abcdef]|[ABCDEF]|\d)+[lL]?/, 'number.hex'],
            [/-?(\d*\.)?\d+([eE][+\-]?\d+)?[jJ]?[lL]?/, 'number']
        ],
        // Recognize strings, including those broken across lines with \ (but not without)
        strings: [
            [/'$/, 'string.escape', '@popall'],
            [/'/, 'string.escape', '@stringBody'],
            [/"$/, 'string.escape', '@popall'],
            [/"/, 'string.escape', '@dblStringBody']
        ],
        stringBody: [
            [/[^\\']+$/, 'string', '@popall'],
            [/[^\\']+/, 'string'],
            [/\\./, 'string'],
            [/'/, 'string.escape', '@popall'],
            [/\\$/, 'string']
        ],
        dblStringBody: [
            [/[^\\"]+$/, 'string', '@popall'],
            [/[^\\"]+/, 'string'],
            [/\\./, 'string'],
            [/"/, 'string.escape', '@popall'],
            [/\\$/, 'string']
        ]
    }
};
