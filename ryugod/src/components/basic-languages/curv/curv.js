/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import { languages } from '../fillers/monaco-editor-core.js';
export var conf = {
    comments: {
        lineComment: '//',
        blockComment: ["/*", "*/"]
    },
    brackets: [
        ['{', '}'],
        ['[', ']'],
        ['(', ')']
    ],
    autoClosingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"', notIn: ['string'] },
        { open: "'", close: "'", notIn: ['string', 'comment'] }
    ],
    surroundingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"' },
        { open: "'", close: "'" }
    ],
    onEnterRules: [
        {
            beforeText: new RegExp('^\\s*(?:fn|for|if|else).*?\\s*$'),
            action: { indentAction: languages.IndentAction.Indent }
        }
    ],
    folding: {
        offSide: true,
        markers: {
            start: new RegExp('^\\s*#region\\b'),
            end: new RegExp('^\\s*#endregion\\b')
        }
    }
};
export var language = {
    defaultToken: 'invalid',
    tokenPostfix: '.curv',
    keywords: [
        'and',
        'assert_error',
        'assert',
        'bit',
        'call',
        'compose',
        'do',
        'error',
        'exec',
        'for',
        'function',
        'id',
        'if',
        'let',
        'local',
        'match',
        'not',
        'or',
        'print',
        'select',
        'var',
        'warning',
        'while',
        'xor',
    ],
    builtins: [
        '_intersection2',
        '_union2',
        'at',
        'atan2',
        'azure',
        'bend',
        'black',
        'blue',
        'box',
        'capped_cone',
        'capsule',
        'chamfer',
        'chartreuse',
        'checkbox',
        'circle',
        'cis',
        'clamp',
        'cmul',
        'colour_picker',
        'colour',
        'complement',
        'concat',
        'cone',
        'contains',
        'convex_polygon',
        'cross',
        'csqr',
        'cube',
        'cyan',
        'cylinder',
        'decode',
        'deg',
        'difference',
        'distance_field',
        'dodecahedron',
        'dol',
        'e',
        'ellipse',
        'ellipsoid',
        'encode',
        'ensure',
        'everything',
        'extrude',
        'filter',
        'green',
        'grey',
        'gyroid',
        'half_plane',
        'half_space',
        'i_animate',
        'i_concentric',
        'i_gyroid',
        'i_linear',
        'i_radial',
        'icosahedron',
        'idmatrix',
        'IM',
        'in',
        'indices',
        'indigo',
        'int_slider',
        'intersection',
        'into',
        'is_bbox2',
        'is_bbox3',
        'is_fun',
        'is_shape',
        'is_vec2',
        'is_vec3',
        'lerp',
        'lib',
        'lipschitz',
        'local_taper_x',
        'local_taper_xy',
        'loft',
        'magenta',
        'make_shape',
        'make_texture',
        'map',
        'MAX',
        'merge',
        'MIN',
        'mod',
        'morph',
        'move',
        'nl',
        'normalize',
        'nothing',
        'null',
        'octahedron',
        'offset',
        'orange',
        'pancake',
        'perimeter_extrude',
        'perp',
        'phi',
        'polygon',
        'polyline',
        'prism',
        'product',
        'quot',
        'RE',
        'rect',
        'red',
        'reduce',
        'reflect_x',
        'reflect_xy',
        'reflect_xz',
        'reflect_y',
        'reflect_yz',
        'reflect_z',
        'reflect',
        'regular_polygon',
        'rem',
        'repeat_finite',
        'repeat_mirror_x',
        'repeat_radial',
        'repeat_x',
        'repeat_xy',
        'repeat_xyz',
        'reverse',
        'revolve',
        'rose',
        'rotate',
        'row',
        'scale_picker',
        'scale',
        'set_bbox',
        'shear_x',
        'shell',
        'show_axes',
        'show_bbox',
        'show_cmap',
        'show_colour',
        'show_dist',
        'show_gradient',
        'show_ifield',
        'size',
        'slice_xy',
        'slice_xz',
        'slice_yz',
        'slice',
        'slider',
        'smooth_max',
        'smooth_min',
        'smooth',
        'smoothstep',
        'sort',
        'sphere',
        'spring_green',
        'square',
        'sRGB',
        'strcat',
        'stretch',
        'String',
        'stroke',
        'swirl',
        'symmetric_difference',
        'T',
        'tab',
        'tetrahedron',
        'texture',
        'torus',
        'translate',
        'transpose',
        'twist',
        'union',
        'warp_domain_xy',
        'webRGB',
        'white',
        'X_axis',
        'X',
        'Y_axis',
        'Y',
        'yellow',
        'Z_axis',
        'Z',
        'bbox',
        'is_2d',
    ],
    typeKeywords: [
        'about',
        'abs',
        'absolute',
        'acos',
        'acosh',
        'align',
        'asin',
        'asinh',
        'at',
        'atan',
        'atan2',
        'atanh',
        'bend',
        'box',
        'capped_cone',
        'capsule',
        'ceil',
        'centre',
        'chamfer',
        'circle',
        'cis',
        'clamp',
        'colour',
        'complement',
        'concat',
        'cone',
        'contains',
        'cos',
        'cosh',
        'cot',
        'count',
        'cross',
        'csc',
        'csqr',
        'cube',
        'cylinder',
        'defined',
        'difference',
        'dodecahedron',
        'dot',
        'ellipse',
        'ellipsoid',
        'ensure',
        'everything',
        'extrude',
        'fields',
        'filter',
        'floor',
        'frac',
        'gradient_cmap',
        'grey',
        'gyroid',
        'half_plane',
        'half_space',
        'hexagon',
        'HSV',
        'hue',
        'i_animate',
        'i_concentric',
        'i_gyroid',
        'i_linear',
        'i_radial',
        'icosahedron',
        'idmatrix',
        'intersection',
        'is_bool',
        'is_func',
        'is_list',
        'is_num',
        'is_primitive_func',
        'is_record',
        'is_string',
        'is_symbol',
        'is_vec2',
        'is_vec3',
        'is_vec4',
        'lerp',
        'lipschitz',
        'local_taper',
        'loft',
        'log',
        'mag',
        'make_shape',
        'make_texture',
        'map',
        'max',
        'merge',
        'min',
        'min',
        'mirror',
        'mod',
        'morph',
        'move',
        'normalize',
        'nothing',
        'octagon',
        'octahedron',
        'offset',
        'OKLab',
        'OKLCH',
        'pancake',
        'pat',
        'pentagon',
        'perimeter_extrude',
        'perp',
        'phase',
        'polygon',
        'polyline',
        'predicate',
        'prism',
        'product',
        'range',
        'record',
        'recordVariable',
        'rect',
        'reduce',
        'reflect',
        'regular_polygon',
        'rem',
        'repeat_radial',
        'repeat',
        'reverse',
        'revolve',
        'rotate',
        'round',
        'row',
        'scale',
        'sec',
        'set_bbox',
        'shear',
        'shell',
        'show_axes',
        'show_bbox',
        'show_cmap',
        'show_colour',
        'show_dist',
        'show_gradient',
        'show_ifield',
        'sign',
        'sin',
        'sinh',
        'slice',
        'smooth',
        'smoothstep',
        'sort',
        'sphere',
        'spheroid',
        'sqrt',
        'square',
        'sRGB',
        'stretch',
        'stroke',
        'sum',
        'swirl',
        'symmetric_difference',
        'tan',
        'tanh',
        'test',
        'tetrahedron',
        'texture',
        'torus',
        'transpose',
        'triangle',
        'trunc',
        'twist',
        'union',
        'value',
        'webRGB',
    ],
    brackets: [
        { open: '{', close: '}', token: 'delimiter.curly' },
        { open: '[', close: ']', token: 'delimiter.bracket' },
        { open: '(', close: ')', token: 'delimiter.parenthesis' }
    ],
    tokenizer: {
        root: [
            { include: '@whitespace' },
            { include: '@numbers' },
            { include: '@strings' },
            [/[,:;]/, 'delimiter'],
            [/[{}\[\]()]/, '@brackets'],
            [/[#\$][a-zA-Z_]\w*/, 'metatag'],
            [
                /[a-zA-Z_]\w*/,
                {
                    cases: {
                        '@keywords': 'keyword',
                        '@builtins': 'type.identifier',
                        '@typeKeywords': 'keyword.flow',
                        '@default': 'identifier'
                    }
                }
            ]
        ],
        // Deal with white space, including single and multi-line comments
        whitespace: [
            [/\s+/, 'white'],
            [/(\/\/.*$)/, 'comment'],
            [/\/\*/, 'comment', '@comment'],
        ],
        comment: [
            [/[^\/*]+/, 'comment'],
            [/\*\//, 'comment', '@pop'],
            [/[\/*]/, 'comment']
        ],
        // Recognize hex, negatives, decimals, imaginaries, longs, and scientific notation
        numbers: [
            [/-?0x([abcdef]|[ABCDEF]|\d)+[lL]?/, 'number.hex'],
            [/inf/, 'number'],
            [/-?(\d*\.)?\d+([eE][+\-]?\d+)?[jJ]?[lL]?/, 'number']
        ],
        // Recognize strings, including those broken across lines with \ (but not without)
        strings: [
            [/'$/, 'string.escape', '@popall'],
            [/'/, 'string.escape', '@stringBody'],
            [/"$/, 'string.escape', '@popall'],
            [/"/, 'string.escape', '@dblStringBody']
        ],
        stringBody: [
            [/[^\\']+$/, 'string', '@popall'],
            [/[^\\']+/, 'string'],
            [/\\./, 'string'],
            [/'/, 'string.escape', '@popall'],
            [/\\$/, 'string']
        ],
        dblStringBody: [
            [/[^\\"]+$/, 'string', '@popall'],
            [/[^\\"]+/, 'string'],
            [/\\./, 'string'],
            [/"/, 'string.escape', '@popall'],
            [/\\$/, 'string']
        ]
    }
};
