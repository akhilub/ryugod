/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
export var conf = {
    comments: {
        lineComment: '!',
    },
    brackets: [
        ['{', '}'],
        ['[', ']'],
        ['(', ')']
    ],
    autoClosingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"', notIn: ['string'] },
        { open: "'", close: "'", notIn: ['string', 'comment'] }
    ],
    surroundingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"' },
        { open: "'", close: "'" }
    ],
    folding: {
        offSide: true,
        markers: {
            start: new RegExp('^\\s*#region\\b'),
            end: new RegExp('^\\s*#endregion\\b')
        }
    }
};
export var language = {
    defaultToken: 'invalid',
    tokenPostfix: '.inf',
    keywords: [
        'alias',
        'bold',
        'box',
        'break',
        'buffer',
        'class',
        'continue',
        'do',
        'else',
        'false',
        'first',
        'fixed',
        'font',
        'for',
        'give',
        'has',
        'hasnt',
        'if',
        'in',
        'inversion',
        'jump',
        'last',
        'move',
        'new_line',
        'nothing',
        'notin',
        'NULL',
        'objectloop',
        'ofclass',
        'off',
        'on',
        'only',
        'or',
        'print_ret',
        'print',
        'private',
        'provides',
        'quit',
        'read',
        'remove',
        'restore',
        'return',
        'reverse',
        'rfalse',
        'roman',
        'rtrue',
        'save',
        'spaces',
        'static',
        'string',
        'string',
        'style',
        'switch',
        'table',
        'true',
        'underline',
        'until',
        'while',
        'with',
    ],
    builtins: [
        'Abbreviate',
        'absent',
        'accelfunc',
        'accelparam',
        'Achieved',
        'acos',
        'action_to_be',
        'action',
        'actor',
        'add_to_scope',
        'add',
        'additive',
        'AddToScope',
        'after',
        'AfterRoutines',
        'AllowPushDir',
        'aload',
        'aloadb',
        'aloadbit',
        'aloads',
        'ALWAYS_BIT',
        'ANIMA_PE',
        'animate',
        'Answer',
        'aread',
        'Array',
        'Array',
        'article',
        'articles',
        'asin',
        'Ask',
        'AskFor',
        'ASKSCOPE_PE',
        'AskTo',
        'astore',
        'astoreb',
        'astorebit',
        'astores',
        'atan',
        'atan2',
        'Attack',
        'Attribute',
        'Banner',
        'before_implicit',
        'before',
        'binarysearch',
        'bitand',
        'bitnot',
        'bitor',
        'bitxor',
        'Blow',
        'buffer_mode',
        'BuildCommand',
        'Burn',
        'Buy',
        'c_style',
        'call',
        'call',
        'callf',
        'callfi',
        'callfii',
        'callfiii',
        'cant_go',
        'CANTSEE_PE',
        'Cap',
        'capacity',
        'catch',
        'ceil',
        'Centre',
        'ChangePlayer',
        'check_unicode',
        'child',
        'children',
        'Class',
        'ClearScreen',
        'Climb',
        'Close',
        'clothing',
        'CLR_AZURE',
        'CLR_BLACK',
        'CLR_BLUE',
        'CLR_CYAN',
        'CLR_DEFAULT',
        'CLR_GREEN',
        'CLR_MAGENTA',
        'CLR_PURPLE',
        'CLR_RED',
        'CLR_WHITE',
        'CLR_YELLOW',
        'CommonAncestor',
        'compass_look',
        'compass',
        'CompassDirection',
        'CONCEAL_BIT',
        'concealed',
        'console',
        'Constant',
        'consult_from',
        'consult_word',
        'Consult',
        'container',
        'copy',
        'copy',
        'copyb',
        'copys',
        'cos',
        'create',
        'CREATURE_TOKEN',
        'creature',
        'Cut',
        'd_obj',
        'd_to',
        'daemon',
        'Date',
        'deadflag',
        'debugtrap',
        'DecimalNumber',
        'DEFART_BIT',
        'Default',
        'describe',
        'description',
        'destroy',
        'Dictionary',
        'DictionaryLookup',
        'Dig',
        'Disrobe',
        'div',
        'door_dir',
        'door_to',
        'door',
        'DrawStatusLine',
        'Drink',
        'Drop',
        'e_obj',
        'e_to',
        'each_turn',
        'EACHTURN_REASON',
        'Eat',
        'edible',
        'ELEMENTARY_TT',
        'Empty',
        'EmptyT',
        'encode_text',
        'End',
        'Endif',
        'ENGLISH_BIT',
        'Enter',
        'enterable',
        'erase_window',
        'error',
        'etype',
        'Examine',
        'EXCEPT_PE',
        'Exit',
        'exp',
        'ext_initialise',
        'ext_messages',
        'Extend',
        'fadd',
        'Fake_action',
        'fatalerror',
        'fdiv',
        'female',
        'Fill',
        'FLOAT_INFINITY',
        'FLOAT_NAN',
        'FLOAT_NINFINITY',
        'floor',
        'fmod',
        'fmul',
        'found_in',
        'fsub',
        'ftonumn',
        'ftonumz',
        'FULLINV_BIT',
        'FullScore',
        'general',
        'gestalt',
        'GetGNAOfObject',
        'getiosys',
        'getmemsize',
        'GetOff',
        'getstringtbl',
        'gg_arguments',
        'gg_event',
        'GG_MAINWIN_ROCK',
        'gg_mainwin',
        'GG_QUOTEWIN_ROCK',
        'gg_statuswin_cursize',
        'GG_STATUSWIN_ROCK',
        'gg_statuswin_size',
        'gg_statuswin',
        'Give',
        'glk',
        'glk',
        'Global',
        'Go',
        'GoIn',
        'GPR_FAIL',
        'GPR_MULTIPLE',
        'GPR_NUMBER',
        'GPR_PREPOSITION',
        'GPR_REPARSE',
        'grammar',
        'HasLightSource',
        'HELD_TOKEN',
        'held',
        'Ifdef',
        'Iffalse',
        'Ifndef',
        'Ifnot',
        'Iftrue',
        'Ifv3',
        'Ifv5',
        'Import',
        'in_obj',
        'in_to',
        'Include',
        'indef_mode',
        'INDENT_BIT',
        'IndirectlyContains',
        'initial',
        'inp1',
        'inp2',
        'input_stream',
        'Insert',
        'inside_description',
        'Inv',
        'invent',
        'inventory_stage',
        'InvTall',
        'InvWide',
        'ISARE_BIT',
        'IsSeeThrough',
        'ITGONE_PE',
        'jeq',
        'jfeq',
        'jfge',
        'jfgt',
        'jfle',
        'jflt',
        'jfne',
        'jge',
        'jgeu',
        'jgt',
        'jgtu',
        'jisinf',
        'jisnan',
        'jle',
        'jleu',
        'jlt',
        'jltu',
        'jne',
        'jnz',
        'jump',
        'Jump',
        'jumpabs',
        'JumpIn',
        'JumpOn',
        'JumpOver',
        'JUNKAFTER_PE',
        'jz',
        'keep_silent',
        'KeyCharPrimitive',
        'KeyDelay',
        'Kiss',
        'Length',
        'LetGo',
        'LIBRARY_ENGLISH',
        'LIBRARY_GRAMMAR',
        'LIBRARY_PARSER',
        'LIBRARY_VERBLIB',
        'LIBRARY_VERSION',
        'life',
        'light',
        'linearsearch',
        'Link',
        'linkedsearch',
        'list_together',
        'Listen',
        'lm_n',
        'lm_o',
        'LMode1',
        'LMode2',
        'LMode3',
        'loadb',
        'Locale',
        'location',
        'Lock',
        'lockable',
        'locked',
        'log',
        'Look',
        'LookUnder',
        'LOOPOVERSCOPE_REASON',
        'LoopOverScope',
        'LowerCase',
        'Lowstring',
        'LTI_Insert',
        'MainWindow',
        'male',
        'malloc',
        'Math',
        'mcopy',
        'Message',
        'metaclass',
        'mfree',
        'Mild',
        'Miscellany',
        'MMULTI_PE',
        'mod',
        'MoveCursor',
        'moved',
        'MoveFloatingObjects',
        'mul',
        'MULTI_PE',
        'MULTI_TOKEN',
        'multi',
        'MULTIEXCEPT_TOKEN',
        'multiexcept',
        'MULTIHELD_TOKEN',
        'multiheld',
        'MULTIINSIDE_TOKEN',
        'multiinside',
        'multiple_object',
        'mzero',
        'n_obj',
        'n_to',
        'name',
        'ne_obj',
        'ne_to',
        'Nearby',
        'neg',
        'neuter',
        'NEWLINE_BIT',
        'NextEntry',
        'NextWord',
        'NextWordStopped',
        'No',
        'NOARTICLE_BITPARTINV_BIT',
        'nop',
        'NOTHELD_PE',
        'NOTHING_PE',
        'notify_mode',
        'NotifyOff',
        'NotifyOn',
        'NotUnderstood',
        'NOUN_TOKEN',
        'noun',
        'noun',
        'NounDomain',
        'NUMBER_PE',
        'NUMBER_TOKEN',
        'number',
        'number',
        'Number',
        'numtof',
        'nw_obj',
        'nw_to',
        'Object',
        'Object',
        'ObjectIsUntouchable',
        'Objects',
        'OffersLight',
        'on',
        'open',
        'Open',
        'openable',
        'Order',
        'orders',
        'Origsource',
        'out_obj',
        'out_to',
        'output_stream',
        'parent',
        'parse_name',
        'parsed_number',
        'parser_action',
        'parser_inflection',
        'parser_one',
        'parser_two',
        'ParseToken',
        'PARSING_REASON',
        'PlaceInScope',
        'Places',
        'player',
        'PlayerTo',
        'plural',
        'PluralFound',
        'pluralname',
        'pow',
        'Pray',
        'print_table',
        'print_to_array',
        'print_unicode',
        'PrintAnything',
        'PrintAnyToArray',
        'PrintCapitalised',
        'PrintOrRun',
        'PrintOrRunVal',
        'PrintToBuffer',
        'Prompt',
        'PronounNotice',
        'Pronouns',
        'PronounValue',
        'proper',
        'Property',
        'protect',
        'pull',
        'Pull',
        'push',
        'Push',
        'PushDir',
        'PutOn',
        'quit',
        'Quit',
        'random',
        'random',
        'REACT_AFTER_REASON',
        'react_after',
        'REACT_BEFORE_REASON',
        'react_before',
        'read_char',
        'real_location',
        'Receive',
        'recreate',
        'RECURSE_BIT',
        'Release',
        'remaining',
        'Remove',
        'REPARSE_CODE',
        'Replace',
        'restart',
        'Restart',
        'restore',
        'Restore',
        'restoreundo',
        'return',
        'Routine',
        'Rub',
        's_obj',
        's_to',
        'save',
        'Save',
        'saveundo',
        'SCENERY_PE',
        'scenery',
        'scope_reason',
        'scope_stage',
        'SCOPE_TT',
        'ScopeWithin',
        'score',
        'score',
        'Score',
        'scored',
        'ScreenHeight',
        'ScreenWidth',
        'ScriptOff',
        'ScriptOn',
        'se_obj',
        'se_to',
        'Search',
        'second',
        'self',
        'selfobj',
        'Serial',
        'set_color',
        'set_cursor',
        'set_window',
        'Set',
        'SetColour',
        'setiosys',
        'setmemsize',
        'SetPronoun',
        'setrandom',
        'setstringtbl',
        'SetTime',
        'SetTo',
        'sexb',
        'sexs',
        'shiftl',
        'short_name_indef',
        'short_name',
        'Show',
        'sibling',
        'sin',
        'Sing',
        'Sleep',
        'Smell',
        'Sorry',
        'sound_effect',
        'split_window',
        'sqrt',
        'Squeeze',
        'sshiftr',
        'standard_interpreter',
        'StartDaemon',
        'StartTimer',
        'static',
        'StatusLine',
        'StatusLineHeight',
        'stkcopy',
        'stkcount',
        'stkpeek',
        'stkroll',
        'stkswap',
        'StopDaemon',
        'StopTimer',
        'streamchar',
        'streamnum',
        'streamstr',
        'streamunichar',
        'String',
        'String',
        'Strong',
        'Stub',
        'STUCK_PE',
        'sub',
        'supporter',
        'sw_obj',
        'sw_to',
        'Swim',
        'Swing',
        'switchable',
        'Switches',
        'SwitchOff',
        'SwitchOn',
        'sys_statusline_flag',
        'System_file',
        'tailcall',
        'take_flag',
        'Take',
        'talkable',
        'TALKING_REASON',
        'tan',
        'TARGET_GLULX',
        'TARGET_ZCODE',
        'Taste',
        'Tell',
        'TERSE_BIT',
        'TESTSCOPE_REASON',
        'TestScope',
        'the_time',
        'thedark',
        'TheSame',
        'Think',
        'throw',
        'ThrowAt',
        'ThrownAt',
        'Tie',
        'time_left',
        'time_out',
        'time',
        'tokenise',
        'TOOFEW_PE',
        'TOOLIT_PE',
        'topic',
        'Touch',
        'Trace',
        'Transfer',
        'transparent',
        'TryNumber',
        'Turn',
        'turns',
        'u_obj',
        'u_to',
        'Undef',
        'Unlock',
        'UnsignedCompare',
        'UpperCase',
        'UPTO_PE',
        'ushiftr',
        'VAGUE_PE',
        'vague_word',
        'VagueGo',
        'VERB_PE',
        'verb_word',
        'verb_wordnum',
        'Verb',
        'verify',
        'Verify',
        'Version',
        'visited',
        'VorpleExecuteJavaScriptCommand',
        'w_obj',
        'w_to',
        'Wait',
        'Wake',
        'WakeOther',
        'warning',
        'Wave',
        'WaveHands',
        'Wear',
        'when_closed',
        'when_off',
        'when_on',
        'when_open',
        'WIN_ALL',
        'WIN_MAIN',
        'WIN_STATUS',
        'with_key',
        'wn',
        'WordAddress',
        'WordInProperty',
        'WordLength',
        'WORDSIZE',
        'WORKFLAG_BIT',
        'workflag',
        'worn',
        'WriteListFrom',
        'Yes',
        'YesOrNo',
        'Zcharacter',
    ],
    javascript: [
        'await',
        'break',
        'case',
        'catch',
        'continue',
        'default',
        'do',
        'else',
        'finally',
        'for',
        'goto',
        'if',
        'return',
        'switch',
        'throw',
        'try',
        'while',
        'with',
        'yield',
        'delete',
        'in',
        'instanceof',
        'new',
        'typeof',
        'void',
        'debugger',
        'false',
        'Infinity',
        'NaN',
        'true',
        'undefined',
        'class',
        'const',
        'function',
        'interface',
        'let',
        'var',
        'extends',
        'private',
        'protected',
        'public',
        'static',
        'arguments',
        'null',
        'this',
    ],
    typeKeywords: [],
    brackets: [
        { open: '{', close: '}', token: 'delimiter.curly' },
        { open: '[', close: ']', token: 'delimiter.bracket' },
        { open: '(', close: ')', token: 'delimiter.parenthesis' }
    ],
    tokenizer: {
        root: [
            { include: '@whitespace' },
            { include: '@numbers' },
            { include: '@strings' },
            [/[,:;]/, 'delimiter'],
            [/[{}\[\]()]/, '@brackets'],
            [/@[a-zA-Z_]\w*/, 'tag'],
            [
                /[a-zA-Z_]\w*/,
                {
                    cases: {
                        '@keywords': 'keyword',
                        '@javascript': 'keyword.flow',
                        '@builtins': 'type.identifier',
                        '@default': 'identifier'
                    }
                }
            ]
        ],
        // Deal with white space, including single and multi-line comments
        whitespace: [
            [/\s+/, 'white'],
            [/(!.*$)/, 'comment'],
        ],
        // Recognize hex, negatives, decimals, imaginaries, longs, and scientific notation
        numbers: [
            [/-?0x([abcdef]|[ABCDEF]|\d)+[lL]?/, 'number.hex'],
            [/-?(\d*\.)?\d+([eE][+\-]?\d+)?[jJ]?[lL]?/, 'number']
        ],
        // Recognize strings, including those broken across lines with \ (but not without)
        strings: [
            [/'$/, 'string.escape', '@popall'],
            [/'/, 'string.escape', '@stringBody'],
            [/"$/, 'string.escape', '@popall'],
            [/"/, 'string.escape', '@dblStringBody']
        ],
        stringBody: [
            [/[^\\']+$/, 'string', '@popall'],
            [/[^\\']+/, 'string'],
            [/\\./, 'string'],
            [/'/, 'string.escape', '@popall'],
            [/\\$/, 'string']
        ],
        dblStringBody: [
            [/[^\\"]+/, 'string'],
            [/\\./, 'string'],
            [/"/, 'string.escape', '@popall'],
            [/\\$/, 'string']
        ]
    }
};
