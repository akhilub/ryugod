/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
export var conf = {
    comments: {
        lineComment: '#',
    },
    brackets: [
        ['{', '}'],
        ['[', ']'],
        ['(', ')']
    ],
    autoClosingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"', notIn: ['string'] },
        { open: "'", close: "'", notIn: ['string', 'comment'] }
    ],
    surroundingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"' },
        { open: "'", close: "'" }
    ],
    folding: {
        offSide: true,
        markers: {
            start: new RegExp('^\\s*#region\\b'),
            end: new RegExp('^\\s*#endregion\\b')
        }
    }
};
export var language = {
    defaultToken: 'invalid',
    tokenPostfix: '.ctr',
    keywords: [
        'abs',
        'accumulator:',
        'add:',
        'addArgumentTo:',
        'addGlobalVariable:',
        'addIncludePath:',
        'addLibraryPath:',
        'addLocalVariable:',
        'addPrivateVariable:',
        'alert:',
        'all:',
        'all',
        'and:',
        'any:',
        'any',
        'append:',
        'appendByte:',
        'applyAll:',
        'applyTo:',
        'argCount',
        'args:',
        'argument:',
        'argumentListOf:',
        'arguments:',
        'at:',
        'atan',
        'autoAlloc:',
        'between:',
        'bitAnd:',
        'bitOr:',
        'bitXor:',
        'blue',
        'break',
        'brk',
        'byteAt:',
        'bytes',
        'call:',
        'catch:',
        'ceil',
        'changeDirectory:',
        'characters',
        'charAdd:',
        'charSub:',
        'childOf:',
        'chunks:',
        'clear',
        'clearLine',
        'close',
        'closure:',
        'cnew:',
        'column:',
        'compile:',
        'compileRegex:',
        'compilerInfo',
        'connectionLimit:',
        'const',
        'constructibleBy:',
        'contains:',
        'containsPattern:',
        'context',
        'continue',
        'copy',
        'copyBlock:',
        'cos',
        'count',
        'countOf:',
        'currentInstrumentorFor:',
        'cyan',
        'day:',
        'day',
        'days',
        'definedFunctions:',
        'definedFunctions',
        'delete',
        'deleteAt:',
        'destruct',
        'detach',
        'disableGlobalInstrument',
        'disableInstrumentation',
        'do:',
        'do',
        'done',
        'dump',
        'duplicateDescriptor:',
        'dust',
        'each_v:',
        'each:',
        'either:',
        'else:',
        'empty?',
        'enableInstrumentation',
        'end',
        'endsWith:',
        'env:',
        'equals:',
        'error:',
        'errorHandler:',
        'escape:',
        'escape',
        'escapeAsciiControls',
        'escapeDoubleQuotes',
        'escapeQuotes',
        'eval',
        'even?',
        'every:',
        'exec',
        'executionSeconds:',
        'exists',
        'exit',
        'exp',
        'expand:',
        'extensionsPath',
        'factorial',
        'fdopen:',
        'fileDescriptor',
        'fill:',
        'filter_v:',
        'filter:',
        'findPattern:',
        'finished',
        'flip',
        'floor',
        'flush',
        'fmap:',
        'fmap!:',
        'foldl:',
        'forbidFileRead',
        'forbidFileWrite',
        'forbidFork',
        'forbidInclude',
        'forbidShell',
        'forever',
        'fork:',
        'format:',
        'formatMap:',
        'formatObjects:',
        'forObject:',
        'frame:',
        'frame',
        'frameId',
        'from:',
        'fromComputer:',
        'frozen',
        'function:',
        'genAccessors:',
        'generateLines',
        'generateLinesBlocking:',
        'generateLinesNonblocking',
        'generateLinkTree:',
        'genReader:',
        'genWriter:',
        'getCharacter',
        'getContext',
        'getMethodsOf:',
        'getObject:',
        'getOrInsert:',
        'getPropertiesOf:',
        'getProperty:',
        'getResponder:',
        'getStrNativeTypeOf:',
        'globalInstrument:',
        'green',
        'hashWithKey:',
        'hasOwnResponder:',
        'head',
        'hiding:',
        'hour:',
        'hour',
        'hours',
        'hrs',
        'htmlEscape',
        'id',
        'if:',
        'ifFalse:',
        'ifTrue:',
        'ignoreInTrace:',
        'iHash',
        'imap:',
        'imap!:',
        'include',
        'includePaths',
        'inContext:',
        'inContextAsMain:',
        'inContextAsWorld:',
        'indexOf:',
        'inet6:',
        'init',
        'input',
        'internal-product',
        'intersperse:',
        'isConstructible:',
        'isDaylightSaving',
        'isInFrame:',
        'isNil',
        'isObject:',
        'isRegexPCRE',
        'items',
        'join:',
        'join',
        'jump',
        'keptAlloc',
        'keptCount',
        'kvlist:',
        'kvmap:',
        'last',
        'lastIndexOf:',
        'lastTrace',
        'learn:',
        'leftTrim',
        'length:',
        'length',
        'lengthMax:',
        'libraryPaths',
        'like:',
        'line',
        'link:',
        'linkedTo:',
        'linkInLibrary:',
        'list:',
        'listen:',
        'lock',
        'log:',
        'log',
        'lower',
        'lower1st',
        'magenta',
        'map_v:',
        'map:',
        'mapPropertiesOf:',
        'marshal:',
        'max:',
        'max',
        'me',
        'means:',
        'memopen:',
        'memoryLimit:',
        'message:',
        'min:',
        'min',
        'minute:',
        'minute',
        'minutes',
        'mkdir:',
        'mkdir',
        'mod:',
        'mode:',
        'month:',
        'month',
        'months',
        'multiply:',
        'my',
        'myself',
        'name:',
        'name',
        'named:',
        'neg?',
        'negate',
        'new:',
        'new',
        'newFill:',
        'newSharedObject:',
        'newSharedObject',
        'newWithOutputMode:',
        'noGC:',
        'not',
        'o/:',
        'object:',
        'objectCount',
        'objectExists:',
        'obtain',
        'odd?',
        'of:',
        'ofObject:',
        'on:',
        'open:',
        'options:',
        'or:',
        'outputTo:',
        'p/:',
        'paddingLeft:',
        'paddingRight:',
        'parentOf:',
        'path',
        'pid',
        'pop',
        'port:',
        'pos?',
        'pow:',
        'primitiveLinkOf:',
        'processorClock',
        'product',
        'purple',
        'push:',
        'put:',
        'qualification',
        'qualify:',
        'randomizeBytesWithLength:',
        'rawRandomNumber',
        'read',
        'readBytes:',
        'realPath',
        'red',
        'regex:',
        'registerInstrumentor:',
        'reIndexOf:',
        'reLastIndexOf:',
        'remainingMessages:',
        'replace:',
        'resetColor',
        'reSplit:',
        'reSplitGen:',
        'respondTo:',
        'reverse',
        'rewind',
        'rightTrim',
        'roll',
        'rollWithSides:',
        'round',
        'run:',
        'run',
        'runAtGlobal:',
        'runHere:',
        'runHere',
        'runInNewContext:',
        's/:',
        'sec',
        'second:',
        'second',
        'seconds',
        'seek:',
        'serialize',
        'serve_ipv4:',
        'serve:',
        'set:',
        'setInterruptHandler:',
        'setPrivate:',
        'setProperty:',
        'shift',
        'shiftLeft:',
        'shiftRight:',
        'signal:',
        'sin',
        'size',
        'skip:',
        'sliceFrom:',
        'sort:',
        'special:',
        'specialize:',
        'split:',
        'sqrt',
        'stackTrace',
        'startsWith:',
        'stat',
        'step:',
        'stickyCount',
        'strTypeOf:',
        'substitute:',
        'subtract:',
        'sum',
        'swapRefs:',
        'sweep',
        'symbol:',
        'tab',
        'tail',
        'tan',
        'target:',
        'tempFileLike:',
        'thisContext',
        'ticksPerSecond',
        'time',
        'timeExecutionOf:',
        'times:',
        'to:',
        'toBits:',
        'toBoolean',
        'toByte',
        'toByteArray',
        'toDescriptor:',
        'toNumber',
        'toString',
        'toStringInBase:',
        'toValue:',
        'trim',
        'type:',
        'type',
        'typeOf:',
        'unless:',
        'unlock',
        'unmarshal:',
        'unpack:',
        'unregisterInstrumetationForObject:',
        'unshift:',
        'upper',
        'upper1st',
        'val:',
        'value:',
        'value',
        'var',
        'version',
        'viewFrom:',
        'wait:',
        'waitForInput',
        'warning:',
        'week:',
        'week',
        'weekDay',
        'weeks',
        'whileFalse:',
        'whileTrue:',
        'with:',
        'withMapping:',
        'worldSnapshot',
        'write:',
        'writeBytes:',
        'writeln:',
        'year:',
        'year',
        'yearDay',
        'years',
        'yellow',
        'zip',
        'zipWith:',
        'zone:',
        'zone',
        'either',
        'as',
        'as:',
        'is',
        'import',
        'export:',
    ],
    builtins:
    [
        'Array',
        'Boolean',
        'Broom',
        'Clock',
        'CodeBlock',
        'Dice',
        'File',
        'HashMap',
        'Inject',
        'Map',
        'Number',
        'Object',
        'Opaque',
        'Pen',
        'Program',
        'Reflect',
        'Shell',
        'Slurp',
        'String',
        'Thread',
    ],
    typeKeywords: [
        'Nil',
        'True',
        'False',
    ],
    brackets: [
        { open: '{', close: '}', token: 'delimiter.curly' },
        { open: '[', close: ']', token: 'delimiter.bracket' },
        { open: '(', close: ')', token: 'delimiter.parenthesis' }
    ],
    tokenizer: {
        root: [
            { include: '@whitespace' },
            { include: '@numbers' },
            { include: '@strings' },
            [/[,;.]/, 'delimiter'],
            [/[{}\[\]()]/, '@brackets'],
            [/:[a-zA-Z_]\w*/, 'variable'],
            [
                /[a-zA-Z_]\w*\/?:?/,
                {
                    cases: {
                        '@keywords': 'keyword',
                        '@builtins': 'type.identifier',
                        '@typeKeywords': 'keyword.flow',
                        '@default': 'identifier'
                    }
                }
            ],
        ],
        // Deal with white space, including single and multi-line comments
        whitespace: [
            [/\s+/, 'white'],
            [/(#.*$)/, 'comment'],
        ],
        // Recognize hex, negatives, decimals, imaginaries, longs, and scientific notation
        numbers: [
            [/-?0x([abcdef]|[ABCDEF]|\d)+[lL]?/, 'number.hex'],
            [/-?(\d*\.)?\d+([eE][+\-]?\d+)?[jJ]?[lL]?/, 'number']
        ],
        // Recognize strings, including those broken across lines with \ (but not without)
        strings: [
            [/'$/, 'string.escape', '@popall'],
            [/'/, 'string.escape', '@stringBody'],
        ],
        stringBody: [
            [/[^\\']+$/, 'string', '@popall'],
            [/[^\\']+/, 'string'],
            [/\\./, 'string'],
            [/'/, 'string.escape', '@popall'],
            [/\\$/, 'string']
        ],
    }
};
