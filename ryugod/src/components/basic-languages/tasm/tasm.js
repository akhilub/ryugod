/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
export var conf = {
    comments: {
        lineComment: ';',
    },
    brackets: [
        ['{', '}'],
        ['[', ']'],
        ['(', ')']
    ],
    autoClosingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"', notIn: ['string'] },
        { open: "'", close: "'", notIn: ['string', 'comment'] }
    ],
    surroundingPairs: [
        { open: '{', close: '}' },
        { open: '[', close: ']' },
        { open: '(', close: ')' },
        { open: '"', close: '"' },
        { open: "'", close: "'" }
    ],
    folding: {
        offSide: true,
        markers: {
            start: new RegExp('^\\s*#region\\b'),
            end: new RegExp('^\\s*#endregion\\b')
        }
    }
};
export var language = {
    defaultToken: '',
    ignoreCase: true,
    tokenPostfix: '.tasm',
    keywords: [
        'AAA',
        'AAD',
        'AAM',
        'AAS',
        'ADC',
        'ADD',
        'AND',
        'ARPL',
        'BOUND',
        'BSF',
        'BSR',
        'BSWAP',
        'BT',
        'BTC',
        'BTR',
        'BTS',
        'CALL',
        'CBW',
        'CLC',
        'CLD',
        'CLI',
        'CLTS',
        'CMC',
        'CMP',
        'CMPXCHG',
        'CMPXCHG8B',
        'CPUID',
        'CWD',
        'CDQ',
        'CWDE',
        'DAA',
        'DAS',
        'DEC',
        'DIV',
        'ENTER',
        'RETN',
        'RETF',
        'F2XM1',
        'FABS',
        'FADD',
        'FADDP',
        'FBLD',
        'FBSTP',
        'FCHG',
        'FCOM',
        'FCOM2',
        'FCOMI',
        'FCOMIP',
        'FCOMP',
        'FCOMP3',
        'FCOMP5',
        'FCOMPP',
        'FCOS',
        'FDECSTP',
        'FDISI',
        'FDIV',
        'FDIVP',
        'FDIVR',
        'FENI',
        'FFREE',
        'FFREEP',
        'FIADD',
        'FICOM',
        'FICOMP',
        'FIDIV',
        'FIDIVR',
        'FILD',
        'FIMUL',
        'FINIT',
        'FINCSTP',
        'FIST',
        'FISTP',
        'FISUB',
        'FISUBR',
        'FLD',
        'FLD1',
        'FLDCW',
        'FLDENV',
        'FLDL2E',
        'FLDL2T',
        'FLDLG2',
        'FLDLN2',
        'FLDPI',
        'FLDZ',
        'FMUL',
        'FMULP',
        'FNCLEX',
        'FNINIT',
        'FNOP',
        'FNSAVE',
        'FNSTCW',
        'FNSTENV',
        'FNSTSW',
        'FPATAN',
        'FPREM',
        'FPREM1',
        'FPTAN',
        'FRNDINT',
        'FRSTOR',
        'FSCALE',
        'FSETPM',
        'FSIN',
        'FSINCOM',
        'FSQRT',
        'FST',
        'FSTP',
        'FSTP1',
        'FSTP8',
        'FSTP9',
        'FSUB',
        'FSUBP',
        'FSUBR',
        'FSUBRP',
        'FTST',
        'FUCOM',
        'FUCOMI',
        'FUCOMPP',
        'FWAIT',
        'FXAM',
        'FXCH',
        'FXCH4',
        'FXCH7',
        'FXTRACT',
        'FYL2X',
        'FYL2XP1',
        'FSTCW',
        'FCHS',
        'FSINCOS',
        'IDIV',
        'IMUL',
        'IN',
        'INC',
        'INT',
        'INTO',
        'INVD',
        'INVLPG',
        'IRET',
        'JMP',
        'LAHF',
        'LAR',
        'LDS',
        'LEA',
        'LEAVE',
        'LES',
        'LFS',
        'LGDT',
        'LGS',
        'LIDT',
        'LLDT',
        'LMSW',
        'LOCK',
        'LODSB',
        'LSL',
        'LSS',
        'LTR',
        'MOV',
        'MOVSX',
        'MOVZX',
        'MUL',
        'NEG',
        'NOP',
        'NOT',
        'OR',
        'OUT',
        'POP',
        'POPA',
        'POPAD',
        'POPF',
        'POPFD',
        'PUSH',
        'PUSHA',
        'PUSHAD',
        'PUSHF',
        'PUSHFD',
        'RCL',
        'RCR',
        'RDMSR',
        'RDPMC',
        'RDTSC',
        'REP',
        'RET',
        'ROL',
        'ROR',
        'RSM',
        'SAHF',
        'SAR',
        'SBB',
        'SGDT',
        'SHL',
        'SAL',
        'SHLD',
        'SHR',
        'SHRD',
        'SIDT',
        'SMSW',
        'STC',
        'STD',
        'STI',
        'STR',
        'SUB',
        'TEST',
        'VERR',
        'VERW',
        'WBINVD',
        'WRMSR',
        'XADD',
        'XCHG',
        'XLAT',
        'XOR',
        'EMMS',
        'MOVD',
        'MOVQ',
        'PACKSSDW',
        'PACKSSWB',
        'PACKUSWB',
        'PADDB',
        'PADDD',
        'PADDSB',
        'PADDSB',
        'PADDSW',
        'PADDUSB',
        'PADDUSW',
        'PADDW',
        'PAND',
        'PANDN',
        'PCMPEQB',
        'PCMPEQD',
        'PCMPEQW',
        'PCMPGTB',
        'PCMPGTD',
        'PCMPGTW',
        'PMADDWD',
        'PMULHW',
        'PMULLW',
        'POR',
        'PSLLD',
        'PSLLQ',
        'PSLLW',
        'PSRAD',
        'PSRAW',
        'PSRLD',
        'PSRLQ',
        'PSRLW',
        'PSUBB',
        'PSUBD',
        'PSUBSB',
        'PSUBSW',
        'PSUBUSB',
        'PSUBUSW',
        'PSUBW',
        'PUNPCKHBW',
        'PUNPCKHBQ',
        'PUNPCKHWD',
        'PUNPCKLBW',
        'PUNPCKLDQ',
        'PUNPCKLWD',
        'PXOR',
        'MODEL',
        'STACK',
        'DATA',
        'CODE',
        'END',
        'ALIAS',
        'ALIGN',
        'ARG',
        'ASSUME',
        '%BIN',
        'CATSRT',
        'CODESEG',
        'byte',
        'word',
        'dword',
        'qword',
        'ptr',
        'COMM',
        '%CONDS',
        'CONST',
        '%CREF',
        '%CREFALL',
        '%CREFREF',
        '%CREFUREF',
        '%CTLS',
        'DATASEG',
        'DB',
        'DD',
        '%DEPTH',
        'DF',
        'DISPLAY',
        'DOSSEG',
        'DP',
        'DQ',
        'DT',
        'DW',
        'ELSE',
        'EMUL',
        'ENDIF',
        'ENDM',
        'ENDP',
        'ENDS',
        'ENUM',
        'EQU',
        'ERR',
        'EVEN',
        'EVENDATA',
        'EXITCODE',
        'EXITM',
        'EXTRN',
        'FARDATA',
        'FASTIMUL',
        'FLIPFLAG',
        'GETFIELD',
        'GLOBAL',
        'GOTO',
        'GROUP',
        'IDEAL',
        '%INCL',
        'INCLUDE',
        'INCLUDELIB',
        'INSTR',
        'IRP',
        'IRPC',
        'JUMPS',
        'LABEL',
        'LARGESTACK',
        '%LINUM',
        '%LIST',
        'LOCAL',
        'LOCALS',
        'MACRO',
        '%MACS',
        'MASKFLAG',
        'MASM',
        'MASM51',
        'MULTERRS',
        'NAME',
        '%NEWPAGE',
        '%NOCONDS',
        '%NOCREF',
        '%NOCTLS',
        'NOEMUL',
        '%NOINCL',
        'NOJUMPS',
        '%NOLIST',
        'NOLOCALS',
        '%NOMACS',
        'NOMASM51',
        'NOMULTERRS',
        'NOSMART',
        '%NOSYMS',
        '%NOTRUNC',
        'NOWARN',
        '%PAGESIZE',
        '%PCNT',
        'PNO87',
        '%POPLCTL',
        'POPSTATE',
        'PROC',
        'PROCDESC',
        'PROCTYPE',
        'PUBLIC',
        'PUBLICDLL',
        'PURGE',
        '%PUSHCTL',
        'PUSHSTATE',
        'QUIRKS',
        'RADIX',
        'RECORD',
        'RETCODE',
        'SEGMENT',
        'SETFIELD',
        'SETFLAG',
        'SIZESTR',
        'LARGE',
        'SMALL',
        'SMALLSTACK',
        'SMART',
        'OFFSET',
        'STARTUPCODE',
        'STRUC',
        'SUBSTR',
        '%SUBTTL',
        '%SYMS',
        'TABLE',
        '%TABSIZE',
        'TBLINIT',
        'TBLINST',
        'TBLPTR',
        'TESTFLAG',
        '%TEXT',
        '%TITLE',
        '%TRUNC',
        'TYPEDEF',
        'UDATASEG',
        'UFARDATA',
        'UNION',
        'USES',
        'VERSION',
        'WAR',
        'WHILE',
        '?DEBUG',
        'CMPS',
        'MOVS',
        'OUTS',
        'SCAS',
        'STOS',
        'LODS',
        'INS',
        'CMOV',
        'SET',
        'CMOV',
        'SET',
        'LOOP',
        'REP',
        'JZ',
        'JNZ',
        'JNAE',
        'JAE',
        'JE',
        'JNE',
        'JMP',
        'SHORT',
        'JAE',
        'JNAE',
        'JB',
        'JNB',
        'JA',        
        'LOW',
        'MOVRI',
        'HLFHL',
        'HLFDE',
        'NEGDE',
        'NEGHL',
        'NEGDE',
        'INS86',
        'JS',
        'JNS',
        'POPR',
        'IFE',
        'PAGE',
        'ADR',
    ],
    builtins: [        
        'AL',
        'AH',
        'BL',
        'BH',
        'CL',
        'CH',
        'DL',
        'DH',
        'AX',
        'BX',
        'CX',
        'DX',
        'SI',
        'DI',
        'BP',
        'SP',
        'CS',
        'DS',
        'ES',
        'GS',
        'CSS',
        'DSS',
        'ESS',
        'GSS',
    ],
    brackets: [
        { open: '{', close: '}', token: 'delimiter.curly' },
        { open: '[', close: ']', token: 'delimiter.bracket' },
        { open: '(', close: ')', token: 'delimiter.parenthesis' }
    ],
    tokenizer: {
        root: [
            { include: '@whitespace' },
            { include: '@numbers' },
            { include: '@strings' },
            [/[,:;]/, 'delimiter'],
            [/[{}\[\]()]/, '@brackets'],
            [/@[a-zA-Z_]\w*/, 'tag'],
            [
                /[%\?]?[a-zA-Z_]\w*/,
                {
                    cases: {
                        '@keywords': 'keyword',
                        '@builtins': 'type.identifier',
                        '@default': 'identifier'
                    }
                }
            ]
        ],
        // Deal with white space, including single and multi-line comments
        whitespace: [
            [/\s+/, 'white'],
            [/(;.*$)/, 'comment'],
        ],
        // Recognize hex, negatives, decimals, imaginaries, longs, and scientific notation
        numbers: [
            [/-?([abcdef]|[ABCDEF]|\d)+[hH]/, 'number.hex'],
            [/-?(\d*\.)?\d+([eE][+\-]?\d+)?[jJ]?[lL]?/, 'number']
        ],
        // Recognize strings, including those broken across lines with \ (but not without)
        strings: [
            [/'$/, 'string.escape', '@popall'],
            [/'/, 'string.escape', '@stringBody'],
            [/"$/, 'string.escape', '@popall'],
            [/"/, 'string.escape', '@dblStringBody']
        ],
        stringBody: [
            [/[^\\']+$/, 'string', '@popall'],
            [/[^\\']+/, 'string'],
            [/\\./, 'string'],
            [/'/, 'string.escape', '@popall'],
            [/\\$/, 'string']
        ],
        dblStringBody: [
            [/[^\\"]+$/, 'string', '@popall'],
            [/[^\\"]+/, 'string'],
            [/\\./, 'string'],
            [/"/, 'string.escape', '@popall'],
            [/\\$/, 'string']
        ]
    }
};
