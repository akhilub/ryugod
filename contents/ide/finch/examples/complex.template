// create the main factory object
Complex <- [
  // constructor
  new: real i: imaginary {
    [|Complexes| _real <- real, _imaginary <- imaginary ]
  }
]

// the prototypical complex number
Complexes <- [
  _real <- 0
  _imaginary <- 0

  // accessors
  real { _real }
  imaginary { _imaginary }

  // string conversion
  to-string {
    _real to-string + "+" + _imaginary + "i"
  }

  // arithmetic
  + right {
    Complex new: _real + right real i: _imaginary + right imaginary
  }

  - right {
    Complex new: _real - right real i: _imaginary - right imaginary
  }

  * right {
    Complex new: (_real * right real) - (_imaginary * right imaginary) i:
           (_imaginary * right real) + (_real * right imaginary)
  }

  magnitude {
    ((_real * _real) + (_imaginary * _imaginary)) sqrt
  }
]

// allow creating complex numbers from normal ones
Numbers :: i { Complex new: 0 i: self }

// test it out a bit
a <- 4 i
b <- Complex new: 2 i: 3

write-line: "a = " + a
write-line: "b = " + b
write-line: "|b| = " + b magnitude
write-line: "a + b = " + (a + b)
write-line: "a * b = " + (a * b)
