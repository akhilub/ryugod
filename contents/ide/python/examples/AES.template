# Python: AES-CBC

import os
os.system('pip3 install PyCryptodome')

from hashlib import sha256
from base64 import b64decode
from base64 import b64encode

from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes
from Crypto.Util.Padding import pad, unpad

key = '0123456789abcdef'.encode()
iv = bytes(16)

def aes_cbc_base64_enc(plain):
    cipher = AES.new(key, AES.MODE_CBC, iv)
    return bytes.decode(b64encode(cipher.encrypt(pad('abcd'.encode(), 
        AES.block_size))))

def aes_cbc_base64_dec(cipher_text):
    cipher = AES.new(key, AES.MODE_CBC, iv)
    return bytes.decode(unpad(cipher.decrypt(b64decode(cipher_text)), 
        AES.block_size))

encrypted = aes_cbc_base64_enc('1234')
decrypted = aes_cbc_base64_dec(encrypted)

print(encrypted)
print(decrypted)
