//
//  OpenSCAD: Super mario
//  https://www.thingiverse.com/thing:5347380
//

$fa=1; $fs=1;
$vpt=[0,0,45];
$vpr=[72,0,$t*360];

// base
color("Limegreen") rotate_extrude()
polygon(points=[
[0,0],[24,0],[24.5,3],[24,10],[27,10],
[27.8,11.7],[27.8,21.4],[26.8,22.7],
[21.8,22.7],[20.8,21.7],[20.8,16],[0,16]
]);

// texte sur base
txt="SUPER MARIO BROS.  30TH";
for(c=[0:len(txt)]) {
  color("White")
  rotate([0,0,-45+c*4.3])
  translate([0,-55.3/2,15.5])
  rotate([90,0,0])
  linear_extrude(0.2)
  text(txt[c],halign="center",size=2.3,
  font="Super Mario Maker Extended:style=Regular");
}
// texte "IE"
color("White")
rotate([0,0,31.6])
translate([0,-55.3/2,15.5])
rotate([90,-90,0])
linear_extrude(0.2)
text("IE",size=2.3,
  font="Super Mario Maker Extended:style=Regular");

// support
color("Lightcyan") translate([0,0,21.5])
cube([20,16,11],center=true);

// mario
b([[-3,-3,0]],"r",[3,3,1]);
b([[-4,-2,0]],"r");
b([[0,-2,0]],"b",[3,4,1]);
b([[-2,0,0]],"b",[2,2,1]);

b([[-4,-3,1]],"r",[7,3,1]);
b([[-3,-4,1]],"r",[5,1,3]);
b([[-2,0,1]],"r");
b([[-2,1,1]],"b",[5,1,1]);
b([[-1,0,1]],"b",[4,1,1]);

b([[-7,-3,0]],"f",[1,2,2]);
b([[-6,-4,1]],"f",[2,4,2]);
b([[-4,-4,2]],"f",[1,4,1]);
b([[-5,-3,3]],"f",[1,2,1]);

b([[-2,-5,2]],"r",[3,1,2]);
b([[-3,-3,2]],"r",[6,5,1]);
b([[3,-2,2]],"r",[1,2,4]);
b([[3,0,2]],"r",[2,4,2]);
b([[5,1,2]],"r",[1,2,1]);
b([[5,0,3]],"r",[1,4,1]);
b([[4,1,4]],"r",[2,3,1]);

b([[6,1,2]],"f",[2,2,1]);
b([[6,0,3]],"f",[2,4,1]);
b([[6,1,4]],"f",[1,2,1]);
b([[7,0,4]],"f",[1,4,2]);
b([[7,1,6]],"f",[1,2,1]);

b([[-2,2,2]],"r",[5,1,1]);
b([[-1,3,2]],"r",[4,1,1]);
b([[-4,-3,3]],"r",[1,4,1]);
b([[-3,-3,3]],"r",[6,6,1]);
b([[-2,3,3]],"r",[5,1,1]);
b([[-1,4,3]],"r",[5,1,2]);
b([[-4,-2,4]],"r",[1,4,3]);
b([[-3,-3,4]],"r",[1,6,3]);

b([[-2,-4,4]],"f");
b([[-1,-4,4]],"r",[2,1,1]);
b([[1,-3,4]],"c");
b([[2,-2,4]],"r",[1,1,2]);
b([[4,0,4]],"c");
b([[-2,-3,4]],"r",[3,7,1]);
b([[-2,-3,5]],"r",[2,1,3]);
b([[-0,-3,5]],"r",[2,1,1]);
b([[-0,-3,6]],"r");

b([[-1,-2,6]],"f",[4,1,1]);
b([[0,-2,7]],"f",[2,1,1]);
b([[0,-1,6]],"f",[4,2,1]);
b([[-3,-1,7]],"f",[6,2,1]);

b([[-3,1,7]],"r",[6,1,1]);
b([[-2,2,5]],"r",[2,1,3]);
b([[-2,3,5]],"r",[2,1,1]);
b([[2,0,5]],"r",[2,4,1]);
b([[3,1,6]],"r",[1,2,2]);
b([[4,1,5]],"r",[1,2,1]);
b([[4,1,6]],"r");

b([[0,3,5]],"f",[2,1,3]);
b([[-1,3,6]],"f",[1,1,2]);
b([[2,3,6]],"f",[2,1,1]);
b([[0,4,6]],"f",[3,1,2]);
b([[3,3,7]],"f",[1,2,1]);
b([[4,2,7]],"f",[1,3,2]);
b([[1,3,8]],"f",[3,2,1]);
b([[3,5,8]],"f",[2,1,2]);
b([[5,5,9]],"f",[1,1,3]);
b([[3,4,9]],"f",[2,1,1]);
b([[4,3,9]],"f");
b([[4,3,10]],"f",[1,3,1]);
b([[4,4,11]],"f");
b([[6,4,9]],"f");
b([[6,3,10]],"f",[1,3,3]);
b([[7,4,10]],"f",[1,1,3]);
b([[7,3,11]],"f",[1,1,2]);

b([[2,-4,9]],"f",[2,8,1]);
b([[4,-3,9]],"f",[1,6,1]);
b([[5,-2,9]],"f",[1,4,1]);
b([[3,-3,10]],"f");
b([[3,2,10]],"f");

b([[5,3,13]],"c",[3,2,2]);
b([[5,2,13]],"c",[1,1,3]);
b([[6,2,14]],"c",[1,1,2]);
b([[5,3,15]],"c",[3,1,1]);
b([[6,4,15]],"c");

b([[5,3,8]],"f",[1,2,5]);

b([[-5,-4,5]],"f",[5,1,1]);
b([[-5,-5,5]],"f",[4,1,1]);
b([[-6,-6,5]],"f",[2,1,2]);
b([[-7,-5,6]],"f",[7,2,1]);
b([[-4,-3,6]],"f",[1,1,2]);
b([[-3,-3,7]],"f");
b([[-6,-5,7]],"f",[4,1,1]);
b([[-5,-4,7]],"f",[4,1,1]);

b([[-6,-6,4]],"c",[1,3,1]);
b([[-6,-5,5]],"c",[1,2,1]);
b([[-7,-4,5]],"c");
b([[-8,-6,4]],"c",[2,2,2]);
b([[-7,-6,3]],"c",[1,2,1]);

b([[-3,-2,7]],"r",[3,1,1]);


b([[-1,-3,8]],"c",[4,6,1]);
b([[-2,-2,8]],"c",[1,4,1]);
b([[3,-1,8]],"c",[1,4,1]);
b([[4,-1,8]],"c",[1,2,1]);
b([[-2,-4,9]],"c",[4,8,1]);
b([[-2,-4,9]],"c",[4,8,1]);
b([[-3,-4,10]],"c");
b([[-3,-5,10]],"c",[1,1,2]);
b([[-3,3,10]],"c");
b([[-3,4,10]],"c",[1,1,2]);
b([[0,-4,10]],"c",[2,8,1]);
b([[-1,-4,11]],"c",[2,8,1]);
b([[2,-3,10]],"c",[1,6,1]);
b([[3,-2,10]],"c",[3,4,1]);
b([[6,-1,10]],"c",[1,2,1]);
b([[1,-3,11]],"c",[1,6,2]);
b([[0,-3,12]],"c",[1,6,1]);
b([[3,-1,11]],"c",[1,2,2]);
b([[4,-1,11]],"c",[1,2,1]);

b([[-3,-3,9]],"f",[1,6,2]);
b([[-4,-3,9]],"f",[1,1,2]);
b([[-4,2,9]],"f",[1,1,2]);
b([[-4,-1,9]],"f",[1,2,1]);
b([[-4,-2,10]],"f",[1,4,2]);
b([[-3,-4,11]],"f",[2,8,1]);
b([[-3,-3,12]],"f",[1,6,1]);
b([[-2,-4,10]],"f",[2,8,1]);
b([[-2,-4,12]],"f",[2,8,1]);
b([[2,-2,11]],"f",[1,4,2]);

b([[-3,-2,13]],"r",[8,4,1]);
b([[5,-1,13]],"r",[1,2,1]);
b([[-2,-3,13]],"r",[5,1,1]);
b([[-2,2,13]],"r",[5,1,1]);
b([[-1,-4,13]],"r",[3,1,1]);
b([[-1,3,13]],"r",[3,1,1]);
b([[-1,-3,14]],"r",[3,1,1]);
b([[-2,-2,14]],"r",[5,1,1]);
b([[-2,-1,14]],"r",[4,2,1]);
b([[-2,1,14]],"r",[5,1,1]);
b([[-1,2,14]],"r",[3,1,1]);
b([[2,-1,14]],"c",[1,2,1]);

module b(liste,coul,taille=[1,1,1]) {
  color(coul=="r"?"Red":
        coul=="f"?"SaddleBrown":
        coul=="c"?"SandyBrown":
        coul=="b"?"Lightcyan":
        "Yellow")
  for(i=[0:1:len(liste)-1]) {
    translate(liste[i]*4+[-2,0,27]) cube(taille*4);
  }
}