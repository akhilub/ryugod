from std.collections import *;

fun main() {
    let mut hm = HashMap.make<Point, Int>();
    // Add some data associated with the points into the map
    hm.insert(Point.new(4.0, 5.0), 5);
    hm.insert(Point.new(1.0, -1.0), -100);
    // Print the map
    hm.println();
    // Retrieve the data associated with a point
    let idx = Point.new(1.0, -1.0);
    if let of Some(result) = hm.get(idx) {
        println(idx, " -> ", *result);
    } else {
        println("Could not find hm[", idx, "]");
    }
}

struct Point { x: Float, y: Float }

impl Point {
    fun new(x: Float, y: Float): Point {
        return {x=x, y=y};
    }

    fun move(&mut self, dx: Float, dy: Float) {
        self.x += dx;
        self.y += dy;
    }
}

main();
